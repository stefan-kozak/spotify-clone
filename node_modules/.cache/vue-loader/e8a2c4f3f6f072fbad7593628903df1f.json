{"remainingRequest":"/media/steve/FCAA4FEFAA4FA4CC/Users/stefa/Desktop/SPA/spotify-clone/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/media/steve/FCAA4FEFAA4FA4CC/Users/stefa/Desktop/SPA/spotify-clone/src/components/SearchComponents/SearchForm.vue?vue&type=style&index=0&id=7403bdfd&lang=scss","dependencies":[{"path":"/media/steve/FCAA4FEFAA4FA4CC/Users/stefa/Desktop/SPA/spotify-clone/src/components/SearchComponents/SearchForm.vue","mtime":1626029861318},{"path":"/media/steve/FCAA4FEFAA4FA4CC/Users/stefa/Desktop/SPA/spotify-clone/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/steve/FCAA4FEFAA4FA4CC/Users/stefa/Desktop/SPA/spotify-clone/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1624994109000},{"path":"/media/steve/FCAA4FEFAA4FA4CC/Users/stefa/Desktop/SPA/spotify-clone/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/media/steve/FCAA4FEFAA4FA4CC/Users/stefa/Desktop/SPA/spotify-clone/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/steve/FCAA4FEFAA4FA4CC/Users/stefa/Desktop/SPA/spotify-clone/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/steve/FCAA4FEFAA4FA4CC/Users/stefa/Desktop/SPA/spotify-clone/node_modules/vue-loader-v16/dist/index.js","mtime":1624994108000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmZvcm0gewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IHJvdzsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIG1hcmdpbi1ib3R0b206IDNlbTsKICB3aWR0aDogMzAlOwoKICBpbnB1dCB7CiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmIHVybCguLi8uLi9hc3NldHMvc3ZnL3NlYXJjaC1pY29uLnN2Zykgbm8tcmVwZWF0IDUlIDQ1JTsKICAgIHBhZGRpbmc6IDFlbTsKICAgIHBhZGRpbmctbGVmdDogNGVtOwoKICAgIGJvcmRlci1yYWRpdXM6IDk5OTlweDsKICAgIHdpZHRoOiA5MCU7CiAgICBib3JkZXI6IG5vbmU7CiAgICAmOmZvY3VzLAogICAgJjpmb2N1cy13aXRoaW4sCiAgICAmOmZvY3VzLXZpc2libGUgewogICAgICBhcHBlYXJhbmNlOiBub25lOwogICAgICBvdXRsaW5lOiBub25lOwogICAgICBib3JkZXI6IG5vbmU7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["/media/steve/FCAA4FEFAA4FA4CC/Users/stefa/Desktop/SPA/spotify-clone/src/components/SearchComponents/SearchForm.vue"],"names":[],"mappings":";AAmFA,CAAC,CAAC,CAAC,EAAE;EACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEV,CAAC,CAAC,CAAC,CAAC,EAAE;IACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACd;EACF;AACF","file":"/media/steve/FCAA4FEFAA4FA4CC/Users/stefa/Desktop/SPA/spotify-clone/src/components/SearchComponents/SearchForm.vue","sourceRoot":"","sourcesContent":["<template>\n  <form action=\"#\" @submit.prevent=\"$_getMusic()\">\n    <a>LEFT</a>\n    <a>RIGHT</a>\n\n    <input\n      type=\"text\"\n      v-model=\"query\"\n      placeholder=\"Search for songs, artists, genre\"\n    />\n  </form>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      query: \"\",\n      tracks: [],\n      artists: [],\n    };\n  },\n  methods: {\n    $_getMusic() {\n      let query = encodeURI(this.query);\n\n      // GET TOKEN AT URL 'https://accounts.spotify.com/authorize?client_id=60ab2a632f3942debcf22cd7da0c3f81&redirect_uri=http%3A%2F%2Flocalhost%3A8080%2F&scope=user-read-private%20user-read-email&response_type=token&state=123'\n      let accessToken =\n        \"BQDSneA71WsLZhfELQ05uLAzWX5WHQeKdkmwJHTJdCkam2uANJ1fbf0jCoBtpwcPX4tH5LTGycxdqAAC9D727eXQGyT3VnW5krCzF7jdBT9ECflXoOPv0kvyLoM3eM5uDTWWF7M4CdVWjS0mxbXkUqx_gZzRBM6cW7zOLIkdrSReH8aKFhk&token_type=Bearer&expires_in=3600&state=123\";\n\n      const config = {\n        method: \"get\",\n        url: `https://api.spotify.com/v1/search?q=${query}&type=track%2Cartist`,\n        headers: {\n          Authorization: \"Bearer \" + accessToken,\n        },\n      };\n\n      //let res = axios(config);\n      axios\n        .get(config.url, config)\n        .then((res) => {\n          let allTracks = res.data.tracks.items\n\n            .filter((track) => track.type === \"track\")\n            .map((track) => this.extractTrackData(track));\n\n          this.$emit(\"addSearchedTracks\", allTracks);\n\n          let allArtists = res.data.artists.items\n\n            .filter((artist) => artist.type === \"artist\")\n            .map((artist) => this.extractArtistsData(artist));\n\n          this.$emit(\"addSearchedArtists\", allArtists);\n        })\n        // CHECK README IF UNAUTHORIZED\n        .catch((error) => {\n          console.log(error, \"Check readme for authorization\");\n        });\n    },\n    extractTrackData({\n      id,\n      artist,\n      uri: audioUri,\n      album,\n      name,\n      type,\n      popularity,\n    }) {\n      return { name, id, artist, audioUri, album, type, popularity };\n    },\n\n    extractArtistsData({ id, name, uri, images, type, popularity }) {\n      return { name, id, uri, images, type, popularity };\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\nform {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 3em;\n  width: 30%;\n\n  input {\n    background: #ffffff url(../../assets/svg/search-icon.svg) no-repeat 5% 45%;\n    padding: 1em;\n    padding-left: 4em;\n\n    border-radius: 9999px;\n    width: 90%;\n    border: none;\n    &:focus,\n    &:focus-within,\n    &:focus-visible {\n      appearance: none;\n      outline: none;\n      border: none;\n    }\n  }\n}\n</style>\n"]}]}