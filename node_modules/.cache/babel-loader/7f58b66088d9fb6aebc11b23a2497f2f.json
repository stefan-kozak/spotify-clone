{"remainingRequest":"C:\\Users\\stefa\\Desktop\\SPA\\spotify-clone\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\stefa\\Desktop\\SPA\\spotify-clone\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\stefa\\Desktop\\SPA\\spotify-clone\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\stefa\\Desktop\\SPA\\spotify-clone\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\stefa\\Desktop\\SPA\\spotify-clone\\src\\views\\Search.vue?vue&type=template&id=1a1d373c","dependencies":[{"path":"C:\\Users\\stefa\\Desktop\\SPA\\spotify-clone\\src\\views\\Search.vue","mtime":1625295899909},{"path":"C:\\Users\\stefa\\Desktop\\SPA\\spotify-clone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\stefa\\Desktop\\SPA\\spotify-clone\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\stefa\\Desktop\\SPA\\spotify-clone\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1624994109000},{"path":"C:\\Users\\stefa\\Desktop\\SPA\\spotify-clone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\stefa\\Desktop\\SPA\\spotify-clone\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1624994108000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCB7IGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCB3aXRoTW9kaWZpZXJzIGFzIF93aXRoTW9kaWZpZXJzLCByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAic2VhcmNoIgp9OwoKdmFyIF9ob2lzdGVkXzIgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJoMSIsIG51bGwsICJTZWFyY2ggZm9yIHNvbmcgeW91IHdhbnQgdG8gbGlzdGVuIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJpbWciLCB7CiAgc3JjOiAie3sgdHJhY2suYWxidW1Db3Zlci5pbWFnZXNbMF0udXJsIH19IiwKICBhbHQ6ICJ0cmFja19hbGJ1bSIKfSwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfaG9pc3RlZF8yLCBfY3JlYXRlVk5vZGUoImZvcm0iLCB7CiAgICBhY3Rpb246ICIjIiwKICAgIG9uU3VibWl0OiBfY2FjaGVbMl0gfHwgKF9jYWNoZVsyXSA9IF93aXRoTW9kaWZpZXJzKGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLmdldE11c2ljKCk7CiAgICB9LCBbInByZXZlbnQiXSkpCiAgfSwgW193aXRoRGlyZWN0aXZlcyhfY3JlYXRlVk5vZGUoImlucHV0IiwgewogICAgdHlwZTogInRleHQiLAogICAgIm9uVXBkYXRlOm1vZGVsVmFsdWUiOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRkYXRhLnF1ZXJ5ID0gJGV2ZW50OwogICAgfSkKICB9LCBudWxsLCA1MTIKICAvKiBORUVEX1BBVENIICovCiAgKSwgW1tfdk1vZGVsVGV4dCwgJGRhdGEucXVlcnldXSldLCAzMgogIC8qIEhZRFJBVEVfRVZFTlRTICovCiAgKSwgX2NyZWF0ZVZOb2RlKCJ1bCIsIG51bGwsIFsoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJGRhdGEudHJhY2tzLCBmdW5jdGlvbiAodHJhY2spIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygibGkiLCB7CiAgICAgIGtleTogdHJhY2suaWQKICAgIH0sIFtfY3JlYXRlVGV4dFZOb2RlKF90b0Rpc3BsYXlTdHJpbmcoJG9wdGlvbnMuc29uZ2lmeSh0cmFjaykpICsgIiB8ICIgKyBfdG9EaXNwbGF5U3RyaW5nKHRyYWNrLmFydGlzdFswXS5uYW1lKSArICIgIiwgMQogICAgLyogVEVYVCAqLwogICAgKSwgX2hvaXN0ZWRfM10pOwogIH0pLCAxMjgKICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICkpXSldKTsKfQ=="},{"version":3,"sources":["C:\\Users\\stefa\\Desktop\\SPA\\spotify-clone\\src\\views\\Search.vue"],"names":[],"mappings":";;;AACO,EAAA,KAAK,EAAC;;;8BACT,YAAA,CAA2C,IAA3C,EAA2C,IAA3C,EAAI,oCAAJ,EAAsC,CAAA;AAAA;AAAtC,C;;8BAWI,YAAA,CAAkE,KAAlE,EAAkE;AAA7D,EAAA,GAAG,EAAC,sCAAyD;AAAlB,EAAA,GAAG,EAAC;AAAc,CAAlE,E,IAAA,E;;AAAA,C;;;uBAZN,YAAA,CAgBM,KAhBN,EAAA,UAAA,EAgBM,CAfJ,UAeI,EAdJ,YAAA,CAGO,MAHP,EAGO;AAHD,IAAA,MAAM,EAAC,GAGN;AAHW,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,cAAA,CAAA,UAAA,MAAA;AAAA,aAAU,QAAA,CAAA,QAAA,EAAV;AAAA,KAAA,EAAkB,CAAA,SAAA,CAAlB,CAAA;AAGjB,GAHP,E,iBACE,YAAA,CAAoC,OAApC,EAAoC;AAA7B,IAAA,IAAI,EAAC,MAAwB;;aAAP,KAAA,CAAA,KAAA,GAAK,M;;AAAE,GAApC,E,IAAA,E;;AAAA,G,iBAA6B,KAAA,CAAA,K,IAD/B,E;;AAAA,GAcI,EATJ,YAAA,CAOK,IAPL,EAOK,IAPL,EAOK,E,kBANH,YAAA,CAKK,SALL,EAKK,IALL,EAKK,WAAA,CALe,KAAA,CAAA,MAKf,EALqB,UAAf,KAAe,EAAV;yBAAhB,YAAA,CAKK,IALL,EAKK;AALwB,MAAA,GAAG,EAAE,KAAK,CAAC;AAKnC,KALL,E,mCACK,QAAA,CAAA,OAAA,CAAQ,KAAR,C,IAAiB,K,GAEpB,gBAAA,CAAG,KAAK,CAAC,MAAN,CAAY,CAAZ,EAAgB,IAAnB,C,GAA0B,G,EAC1B;AAAA;OAAA,U,CAJF,C;GAKK,CALL,E;;AAAA,GAMG,EAPL,CASI,CAhBN,C","sourcesContent":["<template>\n  <div class=\"search\">\n    <h1>Search for song you want to listen</h1>\n    <form action=\"#\" @submit.prevent=\"getMusic()\">\n      <input type=\"text\"  v-model=\"query\">\n\n    </form>\n\n    <ul>\n      <li v-for=\"track in tracks\" :key=\"track.id\">\n        {{ songify(track) }}\n        |\n        {{ track.artist[0].name }}\n        <img src=\"{{ track.albumCover.images[0].url }}\" alt=\"track_album\">\n      </li>\n    </ul>\n\n  </div>\n</template>\n\n\n\n<script>\nimport axios from \"axios\"\n\nexport default {\n  data() {\n    return {\n      query: '',\n      tracks: []\n    }\n  },\n  methods: {\n    getMusic(){\n      let query = encodeURI(this.query)\n\n       // GET TOKEN AT URL 'https://accounts.spotify.com/authorize?client_id=60ab2a632f3942debcf22cd7da0c3f81&redirect_uri=https%3A%2F%2Fgrady.sk%2F&scope=user-read-private%20user-read-email&response_type=token&state=123'\n      let accessToken = 'BQApBA1ngUf1kcoexVXT0wukeL0G18yeK_CaQ8BhXSYkeh3bSeu_SGdiPqMqO2caWrvDD0ZoGe_04GkqgTofshyYizXV1nD3j00-CgkrHc0weCLVvIT79O96Beg1lrnJ13cjfU-_iossurHQ_IDyNzzDWC4pDPlfZ644ZLPWRNaUDuVZc60&token_type=Bearer&expires_in=3600&state=123';\n\n\n      const config = {\n        method: 'get',\n        url: `https://api.spotify.com/v1/search?q=${query}&type=track`,\n        headers: {\n          'Authorization': 'Bearer ' + accessToken\n        },\n    }\n\n      //let res = axios(config);\n      axios.get(config.url, config)\n        .then(res => {\n          this.tracks = []\n          //console.log(res.data.tracks);\n          res.data.tracks.items.forEach( track => {\n            //console.log(track);\n            this.extractData(track)\n\n            this.tracks.push(this.extractData(track))\n          });\n        })\n        .catch( error => {\n          console.log(error);\n        })\n    },\n    songify(track) {\n        return track.trackName.charAt(0).toUpperCase() + track.trackName.slice(1)// + ' - ' + track.trackName.charAt(0).toUpperCase() + track.trackName.slice(1)\n    },\n    extractData({\n      id,\n      artists: artist,\n      uri: audioUri,\n      album: albumCover,\n      name: trackName,\n      album: albumName,\n    }) \n    {\n        return  { trackName, id, artist, audioUri, albumCover, albumName } ;  \n    }\n  },\n}\n</script>\n"],"sourceRoot":""}]}